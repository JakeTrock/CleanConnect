const uuidv1 = require('uuid/v1');
//const PDFDocument = require('pdfkit');
const fn = uuidv1();
const fs = require('fs');
const gr = ["Does this room need to be cleaned? Scan this tag to report:", "Did something run out? Scan me:", "Something broken? Scan me:", "Scan this tag to alert the custodial staff.", "See a spill? Scan this to report it:"];
const QRCode = require('qrcode');
const HummusRecipe = require('hummus-recipe');
const tl = [{
        tagid: '9e87cfe0-e517-11e9-ad2d-59b6f467ed1e',
        name: 'bathroom a',
        comments: [],
        __v: 0
    },
    {
        tagid: '6c995810-e95d-11e9-8715-8fd31126566e',
        name: 'bathroom a',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom b',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom c',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom d',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom e',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom f',
        comments: [],
        __v: 0
    },
    {
        tagid: '78952c80-f41a-11e9-989f-11796a1aca21',
        name: 'bathroom g',
        comments: [],
        __v: 0
    }
];



// const docsettings = [{
//     size: [595.28, 841.89],
//     margins: {
//         left: 12.65,
//         right: 12.65,
//         top: 43.5,
//         bottom: 43.5
//     }
// }];
//const dpath = "M 18.851563 42.941406 L 288.429688 42.941406 C 291.558594 42.941406 294.089844 45.480469 294.089844 48.609375 L 294.089844 145.28125 C 294.089844 148.410156 291.558594 150.941406 288.429688 150.941406 L 18.851563 150.941406 C 15.71875 150.941406 13.179688 148.410156 13.179688 145.28125 L 13.179688 48.609375 C 13.179688 45.480469 15.71875 42.941406 18.851563 42.941406 M 305.429688 42.941406 L 575.011719 42.941406 C 578.140625 42.941406 580.679688 45.480469 580.679688 48.609375 L 580.679688 145.28125 C 580.679688 148.410156 578.140625 150.941406 575.011719 150.941406 L 305.429688 150.941406 C 302.300781 150.941406 299.761719 148.410156 299.761719 145.28125 L 299.761719 48.609375 C 299.761719 45.480469 302.300781 42.941406 305.429688 42.941406 M 18.851563 150.941406 L 288.429688 150.941406 C 291.558594 150.941406 294.089844 153.480469 294.089844 156.609375 L 294.089844 253.28125 C 294.089844 256.410156 291.558594 258.941406 288.429688 258.941406 L 18.851563 258.941406 C 15.71875 258.941406 13.179688 256.410156 13.179688 253.28125 L 13.179688 156.609375 C 13.179688 153.480469 15.71875 150.941406 18.851563 150.941406 M 305.429688 150.941406 L 575.011719 150.941406 C 578.140625 150.941406 580.679688 153.480469 580.679688 156.609375 L 580.679688 253.28125 C 580.679688 256.410156 578.140625 258.941406 575.011719 258.941406 L 305.429688 258.941406 C 302.300781 258.941406 299.761719 256.410156 299.761719 253.28125 L 299.761719 156.609375 C 299.761719 153.480469 302.300781 150.941406 305.429688 150.941406 M 18.851563 258.941406 L 288.429688 258.941406 C 291.558594 258.941406 294.089844 261.480469 294.089844 264.609375 L 294.089844 361.28125 C 294.089844 364.410156 291.558594 366.941406 288.429688 366.941406 L 18.851563 366.941406 C 15.71875 366.941406 13.179688 364.410156 13.179688 361.28125 L 13.179688 264.609375 C 13.179688 261.480469 15.71875 258.941406 18.851563 258.941406 M 305.429688 258.941406 L 575.011719 258.941406 C 578.140625 258.941406 580.679688 261.480469 580.679688 264.609375 L 580.679688 361.28125 C 580.679688 364.410156 578.140625 366.941406 575.011719 366.941406 L 305.429688 366.941406 C 302.300781 366.941406 299.761719 364.410156 299.761719 361.28125 L 299.761719 264.609375 C 299.761719 261.480469 302.300781 258.941406 305.429688 258.941406 M 18.851563 366.941406 L 288.429688 366.941406 C 291.558594 366.941406 294.089844 369.480469 294.089844 372.609375 L 294.089844 469.28125 C 294.089844 472.410156 291.558594 474.941406 288.429688 474.941406 L 18.851563 474.941406 C 15.71875 474.941406 13.179688 472.410156 13.179688 469.28125 L 13.179688 372.609375 C 13.179688 369.480469 15.71875 366.941406 18.851563 366.941406 M 305.429688 366.941406 L 575.011719 366.941406 C 578.140625 366.941406 580.679688 369.480469 580.679688 372.609375 L 580.679688 469.28125 C 580.679688 472.410156 578.140625 474.941406 575.011719 474.941406 L 305.429688 474.941406 C 302.300781 474.941406 299.761719 472.410156 299.761719 469.28125 L 299.761719 372.609375 C 299.761719 369.480469 302.300781 366.941406 305.429688 366.941406 M 18.851563 474.941406 L 288.429688 474.941406 C 291.558594 474.941406 294.089844 477.480469 294.089844 480.609375 L 294.089844 577.28125 C 294.089844 580.410156 291.558594 582.941406 288.429688 582.941406 L 18.851563 582.941406 C 15.71875 582.941406 13.179688 580.410156 13.179688 577.28125 L 13.179688 480.609375 C 13.179688 477.480469 15.71875 474.941406 18.851563 474.941406 M 305.429688 474.941406 L 575.011719 474.941406 C 578.140625 474.941406 580.679688 477.480469 580.679688 480.609375 L 580.679688 577.28125 C 580.679688 580.410156 578.140625 582.941406 575.011719 582.941406 L 305.429688 582.941406 C 302.300781 582.941406 299.761719 580.410156 299.761719 577.28125 L 299.761719 480.609375 C 299.761719 477.480469 302.300781 474.941406 305.429688 474.941406 M 18.851563 582.941406 L 288.429688 582.941406 C 291.558594 582.941406 294.089844 585.480469 294.089844 588.609375 L 294.089844 685.28125 C 294.089844 688.410156 291.558594 690.941406 288.429688 690.941406 L 18.851563 690.941406 C 15.71875 690.941406 13.179688 688.410156 13.179688 685.28125 L 13.179688 588.609375 C 13.179688 585.480469 15.71875 582.941406 18.851563 582.941406 M 305.429688 582.941406 L 575.011719 582.941406 C 578.140625 582.941406 580.679688 585.480469 580.679688 588.609375 L 580.679688 685.28125 C 580.679688 688.410156 578.140625 690.941406 575.011719 690.941406 L 305.429688 690.941406 C 302.300781 690.941406 299.761719 688.410156 299.761719 685.28125 L 299.761719 588.609375 C 299.761719 585.480469 302.300781 582.941406 305.429688 582.941406 M 18.851563 690.941406 L 288.429688 690.941406 C 291.558594 690.941406 294.089844 693.480469 294.089844 696.609375 L 294.089844 793.28125 C 294.089844 796.410156 291.558594 798.941406 288.429688 798.941406 L 18.851563 798.941406 C 15.71875 798.941406 13.179688 796.410156 13.179688 793.28125 L 13.179688 696.609375 C 13.179688 693.480469 15.71875 690.941406 18.851563 690.941406 M 305.429688 690.941406 L 575.011719 690.941406 C 578.140625 690.941406 580.679688 693.480469 580.679688 696.609375 L 580.679688 793.28125 C 580.679688 796.410156 578.140625 798.941406 575.011719 798.941406 L 305.429688 798.941406 C 302.300781 798.941406 299.761719 796.410156 299.761719 793.28125 L 299.761719 696.609375 C 299.761719 693.480469 302.300781 690.941406 305.429688 690.941406 ";


//const doc = new PDFDocument(docsettings);
//doc.pipe(fs.createWriteStream('./temp/testing.pdf'));
var pgsw = 0;            
const doc = new HummusRecipe('new','output.pdf');
const template = './template.pdf';
doc.appendPage(template, 1).structure('pdf-structure.txt');
//doc.path(dpath).lineWidth(3).fillAndStroke("grey", "#0f0f0f");
(async () => {

    for (let i = 0; i < tl.length; i++) {
        if (i > 10) {
            doc.appendPage(template, 1);
            //doc.addPage(docsettings).path(dpath).lineWidth(3).fillAndStroke("grey", "#0f0f0f");
        }
        QRCode.toDataURL("http://jancoord.co/tag/" + tl[i].tagid, function(error, url) {
            if (error) console.error(error);
            if (i == 7) {
                pgsw = 285.7;
            }
            
            doc
                // edit 1st page
                .editPage(1)
                .text('Add some texts to an existing pdf file', 150, 300)
                .rectangle(20, 20, 40, 100)
                .comment('Add 1st comment annotaion', 200, 300)
                .image('/path/to/image.jpg', 20, 100, { width: 300, keepAspectRatio: true })
                .endPage()
                // edit 2nd page
                .editPage(2)
                .comment('Add 2nd comment annotaion', 200, 100)
                .endPage()
                // end and save
                .endPDF();
            // doc.text(gr[Math.ceil(Math.random() * (gr.length - 1))], pgsw, 50 + i * 108, {
            //         width: 333.75,
            //         align: 'right'
            //     }).fill("#FFFFFF").text(tl[i].name, 103 + pgsw, 200 + i * 108, {
            //         width: 173,
            //         align: 'right'
            //     }).fillOpacity(1).fill("#FFFFFF")
            //     .image(url, pgsw, i * 108, { fit: [108, 108], });
            if (i == tl.length - 1) doc.end();
        });
    }
    //label spec: https://www.avery.com/templates/5163
    //https://www.npmjs.com/package/hummus-recipe#modify-an-existing-pdf
})();